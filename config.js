window.CONFIG={"assetRoot":"/home/kandie/Workspace/Projects/karazeh_v2","outputDir":"/home/kandie/Workspace/Projects/karazeh_v2/doc/compiled","format":"html","title":"Karazeh","metaDescription":"","htmlFile":"/home/kandie/Workspace/Projects/megadoc/ui/index.tmpl.html","emitFiles":true,"emittedFileExtension":".html","showExtensionInURLs":true,"motto":null,"favicon":null,"stylesheet":null,"styleOverrides":null,"gitStats":false,"footer":"<p>Made with &#9829; using <a href=\"https://github.com/megadoc\" target=\"_blank\">megadoc</a>.</p>\n","hotness":{"count":1,"interval":"weeks"},"disqus":{"enabled":false,"shortname":"","baseUrl":"http://localhost"},"launchExternalLinksInNewTabs":true,"showSettingsLinkInBanner":false,"resizableSidebar":true,"collapsibleSidebar":false,"scrollSpying":false,"layout":"multi-page","layoutOptions":{"rewrite":{"/readme.html":"/index.html"},"singlePageMode":false,"bannerLinks":[],"banner":false,"customLayouts":[{"match":{"by":"namespace","on":["articles"]},"regions":[{"name":"Layout::Sidebar","outlets":[{"name":"Markdown::Browser","options":{"flat":true}}]},{"name":"Layout::Content","options":{"framed":true},"outlets":[{"name":"Markdown::Document"}]},{"name":"Layout::NavBar","options":{"framed":true},"outlets":[{"name":"Markdown::DocumentTOC"}]}]}]},"spotlight":true,"tooltipPreviews":true,"syntaxHighlighting":{"defaultLanguage":"javascript","languages":["bash","clike","c","javascript","markdown","ruby"],"aliases":{"shell":"bash"},"customLayouts":null},"linkResolver":{"schemes":["Megadoc","MediaWiki"],"ignore":{}},"tmpDir":"/home/kandie/Workspace/Projects/karazeh_v2/.megadoc","gitRepository":"/home/kandie/Workspace/Projects/karazeh_v2/.git","version":"5.0.1","pluginConfigs":{"megadoc-theme-qt":[{"invertedSidebar":false}],"megadoc-plugin-markdown":[{"id":"articles","title":"Articles","baseURL":"/","source":["README.md","doc/**/*.md"],"exclude":[],"fullFolderTitles":true,"fullFolderTitleDelimiter":" - ","allowLeadingSlashInLinks":true,"generateMissingHeadings":true,"discardIdPrefix":null,"discardFileExtension":true,"sanitize":false,"commonPrefix":"/home/kandie/Workspace/Projects/karazeh_v2/"}]},"sourceStyleSheets":["/home/kandie/Workspace/Projects/megadoc/ui/css/index.less","/home/kandie/Workspace/Projects/megadoc/packages/megadoc-theme-qt/ui/index.less","/home/kandie/Workspace/Projects/megadoc/packages/megadoc-plugin-markdown/ui/css/index.less"],"pluginCount":2,"pluginNames":["megadoc-theme-qt","megadoc-plugin-markdown"],"database":{"articles":{"id":"articles","name":"megadoc-plugin-markdown","title":"Articles","config":{"id":"articles","title":"Articles","baseURL":"/","source":["README.md","doc/**/*.md"],"exclude":[],"fullFolderTitles":true,"fullFolderTitleDelimiter":" - ","allowLeadingSlashInLinks":true,"generateMissingHeadings":true,"discardIdPrefix":null,"discardFileExtension":true,"sanitize":false,"commonPrefix":"/home/kandie/Workspace/Projects/karazeh_v2/"},"meta":{"href":"/.html","defaultLayouts":[{"match":{"by":"type","on":["Document","DocumentEntity"]},"regions":[{"name":"Layout::Content","options":{"framed":true},"outlets":[{"name":"Markdown::Document"},{"name":"Layout::Content"}]},{"name":"Layout::Sidebar","outlets":[{"name":"Markdown::Browser"},{"name":"Layout::Sidebar"}]}]},{"match":{"by":"type","on":["Namespace"]},"regions":[{"name":"Layout::Sidebar","outlets":[{"name":"Markdown::Browser"}]}]}],"anchor":"articles"},"documents":["articles/readme","articles/doc-architecture","articles/doc-faq","articles/doc-internals","articles/doc-overview"],"type":"Namespace","symbol":"/","uid":"articles","indices":{}},"articles/readme":{"id":"readme","symbol":"#","title":"Karazeh\n","summary":"Karazeh is a cross-platform tool for patching and launching desktop applications, suited for PC games. The purpose of this tool is to provide you with the ability to update your users' clients with minimal hassle without requiring you to re-invent the wheel and write your own patcher.","filePath":"README.md","properties":{"filePath":"README.md","source":"\n    <h1 class=\"anchorable-heading\">\n      <a name=\"karazeh\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#karazeh\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Karazeh</span>\n    </h1>\n  <p>Karazeh is a cross-platform tool for patching and launching desktop applications, suited for PC games. The purpose of this tool is to provide you with the ability to update your users&#39; clients with minimal hassle without requiring you to re-invent the wheel and write your own patcher.</p>\n<p>Karazeh is meant to be used with <a href=\"https://github.com/amireh/Kiwi\" target=\"_blank\">Kiwi</a>, the tool that generates the patch scripts which Karazeh consumes. They both should operate on Windows, Linux, and Mac OS X.</p>\n<p>Both tools are freely available and licensed under the MIT license.</p>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"building\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#building\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Building</span>\n    </h2>\n  <p><em>TBD</em></p>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"usage\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#usage\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Usage</span>\n    </h2>\n  <p><em>TBD</em></p>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"tests\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#tests\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Tests</span>\n    </h2>\n  <p>To run the unit tests you must launch an http server to serve the fixtures. You can\neasily do this using a light http daemon such as <code>darkhttpd</code> and running it\non port 8080 to serve <code>/path/to/karazeh/test/fixture</code> as the root directory.</p>\n<p>Example on Arch Linux:</p>\n<pre class=\"language-bash\"><code>pacman -S darkhttpd\n<span class=\"token function\" >cd</span> /path/to/karazeh/test/fixture\ndarkhttpd <span class=\"token keyword\" >.</span></code></pre><p>Afterwards, run the binary:</p>\n<pre class=\"language-bash\"><code>./karazeh_unit_tests</code></pre>\n    <h2 class=\"anchorable-heading\">\n      <a name=\"license\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#license\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">License</span>\n    </h2>\n  <p>Copyright 2016 Ahmad Amireh <a href=\"&#109;&#97;&#105;&#108;&#116;&#111;&#58;&#x61;&#104;&#109;&#97;&#x64;&#64;&#97;&#x6d;&#x69;&#114;&#101;&#x68;&#x2e;&#110;&#x65;&#x74;\" target=\"_blank\">&#x61;&#104;&#109;&#97;&#x64;&#64;&#97;&#x6d;&#x69;&#114;&#101;&#x68;&#x2e;&#110;&#x65;&#x74;</a>.</p>\n<p>The code is licensed under the GNU L-GPL v3.0 (see COPYING) and is free to use,\nlink-against and embed within free and commercial applications.</p>\n","id":"readme","sortingId":"README.md","title":"Karazeh","wordCount":189,"summary":"Karazeh is a cross-platform tool for patching and launching desktop applications, suited for PC games. The purpose of this tool is to provide you with the ability to update your users' clients with minimal hassle without requiring you to re-invent the wheel and write your own patcher.","plainTitle":"Karazeh\n","fileName":"README","folder":".","sections":[{"id":"karazeh","scopedId":"karazeh","level":1,"html":"Karazeh","text":"Karazeh"},{"id":"building","scopedId":"building","level":2,"html":"Building","text":"Building"},{"id":"usage","scopedId":"usage","level":2,"html":"Usage","text":"Usage"},{"id":"tests","scopedId":"tests","level":2,"html":"Tests","text":"Tests"},{"id":"license","scopedId":"license","level":2,"html":"License","text":"License"}]},"entities":["articles/readme#karazeh","articles/readme#building","articles/readme#usage","articles/readme#tests","articles/readme#license"],"type":"Document","parentNode":"articles","meta":{"hrefRewritten":true,"href":"/index.html","anchor":"articles-readme"},"uid":"articles/readme","indices":{"readme":1,"/README.md":1}},"articles/readme#karazeh":{"id":"karazeh","title":"Karazeh","properties":{"id":"karazeh","scopedId":"karazeh","level":1,"html":"Karazeh","text":"Karazeh"},"meta":{"indexDisplayName":" Karazeh","anchor":"karazeh","href":"/index.html#karazeh"},"type":"DocumentEntity","parentNode":"articles/readme","uid":"articles/readme#karazeh","indices":{"karazeh":0,"readme#karazeh":1,"/README.md#karazeh":1}},"articles/readme#building":{"id":"building","title":"Building","properties":{"id":"building","scopedId":"building","level":2,"html":"Building","text":"Building"},"meta":{"indexDisplayName":"   Building","anchor":"building","href":"/index.html#building"},"type":"DocumentEntity","parentNode":"articles/readme","uid":"articles/readme#building","indices":{"building":0,"readme#building":1,"/README.md#building":1}},"articles/readme#usage":{"id":"usage","title":"Usage","properties":{"id":"usage","scopedId":"usage","level":2,"html":"Usage","text":"Usage"},"meta":{"indexDisplayName":"   Usage","anchor":"usage","href":"/index.html#usage"},"type":"DocumentEntity","parentNode":"articles/readme","uid":"articles/readme#usage","indices":{"usage":0,"readme#usage":1,"/README.md#usage":1}},"articles/readme#tests":{"id":"tests","title":"Tests","properties":{"id":"tests","scopedId":"tests","level":2,"html":"Tests","text":"Tests"},"meta":{"indexDisplayName":"   Tests","anchor":"tests","href":"/index.html#tests"},"type":"DocumentEntity","parentNode":"articles/readme","uid":"articles/readme#tests","indices":{"tests":0,"readme#tests":1,"/README.md#tests":1}},"articles/readme#license":{"id":"license","title":"License","properties":{"id":"license","scopedId":"license","level":2,"html":"License","text":"License"},"meta":{"indexDisplayName":"   License","anchor":"license","href":"/index.html#license"},"type":"DocumentEntity","parentNode":"articles/readme","uid":"articles/readme#license","indices":{"license":0,"readme#license":1,"/README.md#license":1}},"articles/doc-architecture":{"id":"doc-architecture","symbol":"#","title":"Architecture\n","summary":"\n\n","filePath":"doc/architecture.md","properties":{"filePath":"doc/architecture.md","source":"\n    <h1 class=\"anchorable-heading\">\n      <a name=\"architecture\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#architecture\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Architecture</span>\n    </h1>\n  <iframe\n  src='http://www.xmind.net/embed/jXME'\n  width='100%'\n  height='540px'\n  frameborder='0'\n  scrolling='no'\n></iframe>\n\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"core\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#core\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Core</span>\n    </h2>\n  \n    <h3 class=\"anchorable-heading\">\n      <a name=\"transporters\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#transporters\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Transporters</span>\n    </h3>\n  <ol>\n<li>Need to provide a post-download hook for a compressor to decompress if necessary.</li>\n</ol>\n\n    <h3 class=\"anchorable-heading\">\n      <a name=\"path-resolver\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#path-resolver\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Path Resolver</span>\n    </h3>\n  <ol>\n<li>Must allow for user-defined special paths</li>\n</ol>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"images\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#images\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Images</span>\n    </h2>\n  <ol>\n<li>are uniquely identified by the sum of checksums of identity files specified in an identity list</li>\n</ol>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"manifests\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#manifests\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Manifests</span>\n    </h2>\n  \n    <h3 class=\"anchorable-heading\">\n      <a name=\"the-flavor-manifest-fmf\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#the-flavor-manifest-fmf\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">The Flavor Manifest (FMF)</span>\n    </h3>\n  <p>Every application has one and only one FMF. Each FMF entry describes a completely separate &quot;flavor&quot; of the application which will be represented by its own set of manifests.</p>\n<p>This is crucial for applications of all types, and games in particular. If a game supports DLCs or Expansion sets, then each flavor would most probably need its own branch of patching.</p>\n<p>An application is not restricted to qualify as only one flavor. Following the game example, a flavor of the game with the DLC X may very well still use the patches for the original game. And if both DLC X and Y are installed, then all of the original, DLC X, and DLC Y flavor branches should be followed.</p>\n<p>An FMF entry:</p>\n<ol>\n<li>should be tagged</li>\n<li>should define a condition that identifies the flavor</li>\n</ol>\n<p>FMF template:</p>\n<pre class=\"language-xml\"><code><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>karazeh</span><span class=\"token punctuation\" >></span></span>\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>flavors</span><span class=\"token punctuation\" >></span></span>\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>flavor</span> <span class=\"token attr-name\" >name</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>Vanilla<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span>\n      <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>conditions</span><span class=\"token punctuation\" >></span></span>\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>condition</span><span class=\"token punctuation\" >></span></span>\n          <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>name</span><span class=\"token punctuation\" >></span></span>file-exists<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>name</span><span class=\"token punctuation\" >></span></span>\n          <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>args</span><span class=\"token punctuation\" >></span></span><span class=\"token cdata\" >&lt;![CDATA[path/to/file|folder]]></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>args</span><span class=\"token punctuation\" >></span></span>\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>condition</span><span class=\"token punctuation\" >></span></span>\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>condition</span><span class=\"token punctuation\" >></span></span>\n          <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>name</span><span class=\"token punctuation\" >></span></span>custom<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>name</span><span class=\"token punctuation\" >></span></span>\n          <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>args</span><span class=\"token punctuation\" >></span></span><span class=\"token cdata\" >&lt;![CDATA[identify_my_flavor]]></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>args</span><span class=\"token punctuation\" >></span></span>\n        <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>condition</span><span class=\"token punctuation\" >></span></span>        \n      <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>conditions</span><span class=\"token punctuation\" >></span></span>\n    <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>flavor</span><span class=\"token punctuation\" >></span></span>\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>flavors</span><span class=\"token punctuation\" >></span></span>\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>karazeh</span><span class=\"token punctuation\" >></span></span></code></pre><p>Finally, the use of FMF is optional. The default should contain a single entry tagged as &#39;Vanilla&#39; or &#39;Original&#39; with a condition that always evaluates to true.</p>\n\n    <h3 class=\"anchorable-heading\">\n      <a name=\"identity-manifests-imf\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#identity-manifests-imf\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Identity Manifests (IMF)</span>\n    </h3>\n  <p>There needs to be a method to uniquely identify the application at any version. Identity lists are intended to do just that; specify a list of files, the accumulative checksum of which will be the application&#39;s <em>identity</em>.</p>\n<p>Using that identity value, the application at each version will represented by a unique <em>Image</em>.</p>\n<p>The IMF contains all the identity lists (ILs) the application requires. It is fetched and parsed right after the FMF. An identity registry will be built using the identity lists described in the IMF, and the application is expected to be identified by exactly one IL for each flavor the application was identified to represent.</p>\n<p>The actual identification is done in the VMF parsing stage.</p>\n\n    <h3 class=\"anchorable-heading\">\n      <a name=\"the-version-manifest-vmf\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#the-version-manifest-vmf\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">The Version Manifest (VMF)</span>\n    </h3>\n  <p>As the name implies, the purpose of the VMF is to identify the version of the application (aka, locating its Image), and describe the history of the application.</p>\n<p>There should be only one VMF per application flavor. The VMF contains a listing of entries that map to the final manifest entity, Release Manifests (RMFs).</p>\n<p>VMF entries should:</p>\n<ol>\n<li>specify the image id the RMF is for</li>\n<li>specify the RMF URI</li>\n</ol>\n<p>If the application could not be identified at this stage, no further processing will be allowed and the image should be reported to be corrupt.</p>\n\n    <h3 class=\"anchorable-heading\">\n      <a name=\"release-manifests-rmf\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#release-manifests-rmf\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Release Manifests (RMF)</span>\n    </h3>\n  ","id":"doc-architecture","sortingId":"doc/architecture.md","title":"Architecture","wordCount":473,"summary":"\n\n","plainTitle":"Architecture\n","fileName":"architecture","folder":"doc","sections":[{"id":"architecture","scopedId":"architecture","level":1,"html":"Architecture","text":"Architecture"},{"id":"core","scopedId":"core","level":2,"html":"Core","text":"Core"},{"id":"transporters","scopedId":"transporters","level":3,"html":"Transporters","text":"Transporters"},{"id":"path-resolver","scopedId":"path-resolver","level":3,"html":"Path Resolver","text":"Path Resolver"},{"id":"images","scopedId":"images","level":2,"html":"Images","text":"Images"},{"id":"manifests","scopedId":"manifests","level":2,"html":"Manifests","text":"Manifests"},{"id":"the-flavor-manifest-fmf","scopedId":"the-flavor-manifest-fmf","level":3,"html":"The Flavor Manifest (FMF)","text":"The Flavor Manifest (FMF)"},{"id":"identity-manifests-imf","scopedId":"identity-manifests-imf","level":3,"html":"Identity Manifests (IMF)","text":"Identity Manifests (IMF)"},{"id":"the-version-manifest-vmf","scopedId":"the-version-manifest-vmf","level":3,"html":"The Version Manifest (VMF)","text":"The Version Manifest (VMF)"},{"id":"release-manifests-rmf","scopedId":"release-manifests-rmf","level":3,"html":"Release Manifests (RMF)","text":"Release Manifests (RMF)"}]},"entities":["articles/doc-architecture#architecture","articles/doc-architecture#core","articles/doc-architecture#transporters","articles/doc-architecture#path-resolver","articles/doc-architecture#images","articles/doc-architecture#manifests","articles/doc-architecture#the-flavor-manifest-fmf","articles/doc-architecture#identity-manifests-imf","articles/doc-architecture#the-version-manifest-vmf","articles/doc-architecture#release-manifests-rmf"],"type":"Document","parentNode":"articles","meta":{"href":"/doc-architecture.html","anchor":"articles-doc-architecture"},"uid":"articles/doc-architecture","indices":{"doc-architecture":1,"/doc/architecture.md":1}},"articles/doc-architecture#architecture":{"id":"architecture","title":"Architecture","properties":{"id":"architecture","scopedId":"architecture","level":1,"html":"Architecture","text":"Architecture"},"meta":{"indexDisplayName":" Architecture","anchor":"architecture","href":"/doc-architecture.html#architecture"},"type":"DocumentEntity","parentNode":"articles/doc-architecture","uid":"articles/doc-architecture#architecture","indices":{"architecture":0,"doc-architecture#architecture":1,"/doc/architecture.md#architecture":1}},"articles/doc-architecture#core":{"id":"core","title":"Core","properties":{"id":"core","scopedId":"core","level":2,"html":"Core","text":"Core"},"meta":{"indexDisplayName":"   Core","anchor":"core","href":"/doc-architecture.html#core"},"type":"DocumentEntity","parentNode":"articles/doc-architecture","uid":"articles/doc-architecture#core","indices":{"core":0,"doc-architecture#core":1,"/doc/architecture.md#core":1}},"articles/doc-architecture#transporters":{"id":"transporters","title":"Transporters","properties":{"id":"transporters","scopedId":"transporters","level":3,"html":"Transporters","text":"Transporters"},"meta":{"indexDisplayName":"     Transporters","anchor":"transporters","href":"/doc-architecture.html#transporters"},"type":"DocumentEntity","parentNode":"articles/doc-architecture","uid":"articles/doc-architecture#transporters","indices":{"transporters":0,"doc-architecture#transporters":1,"/doc/architecture.md#transporters":1}},"articles/doc-architecture#path-resolver":{"id":"path-resolver","title":"Path Resolver","properties":{"id":"path-resolver","scopedId":"path-resolver","level":3,"html":"Path Resolver","text":"Path Resolver"},"meta":{"indexDisplayName":"     Path Resolver","anchor":"path-resolver","href":"/doc-architecture.html#path-resolver"},"type":"DocumentEntity","parentNode":"articles/doc-architecture","uid":"articles/doc-architecture#path-resolver","indices":{"path-resolver":0,"doc-architecture#path-resolver":1,"/doc/architecture.md#path-resolver":1}},"articles/doc-architecture#images":{"id":"images","title":"Images","properties":{"id":"images","scopedId":"images","level":2,"html":"Images","text":"Images"},"meta":{"indexDisplayName":"   Images","anchor":"images","href":"/doc-architecture.html#images"},"type":"DocumentEntity","parentNode":"articles/doc-architecture","uid":"articles/doc-architecture#images","indices":{"images":0,"doc-architecture#images":1,"/doc/architecture.md#images":1}},"articles/doc-architecture#manifests":{"id":"manifests","title":"Manifests","properties":{"id":"manifests","scopedId":"manifests","level":2,"html":"Manifests","text":"Manifests"},"meta":{"indexDisplayName":"   Manifests","anchor":"manifests","href":"/doc-architecture.html#manifests"},"type":"DocumentEntity","parentNode":"articles/doc-architecture","uid":"articles/doc-architecture#manifests","indices":{"manifests":0,"doc-architecture#manifests":1,"/doc/architecture.md#manifests":1}},"articles/doc-architecture#the-flavor-manifest-fmf":{"id":"the-flavor-manifest-fmf","title":"The Flavor Manifest (FMF)","properties":{"id":"the-flavor-manifest-fmf","scopedId":"the-flavor-manifest-fmf","level":3,"html":"The Flavor Manifest (FMF)","text":"The Flavor Manifest (FMF)"},"meta":{"indexDisplayName":"     The Flavor Manifest (FMF)","anchor":"the-flavor-manifest-fmf","href":"/doc-architecture.html#the-flavor-manifest-fmf"},"type":"DocumentEntity","parentNode":"articles/doc-architecture","uid":"articles/doc-architecture#the-flavor-manifest-fmf","indices":{"the-flavor-manifest-fmf":0,"doc-architecture#the-flavor-manifest-fmf":1,"/doc/architecture.md#the-flavor-manifest-fmf":1}},"articles/doc-architecture#identity-manifests-imf":{"id":"identity-manifests-imf","title":"Identity Manifests (IMF)","properties":{"id":"identity-manifests-imf","scopedId":"identity-manifests-imf","level":3,"html":"Identity Manifests (IMF)","text":"Identity Manifests (IMF)"},"meta":{"indexDisplayName":"     Identity Manifests (IMF)","anchor":"identity-manifests-imf","href":"/doc-architecture.html#identity-manifests-imf"},"type":"DocumentEntity","parentNode":"articles/doc-architecture","uid":"articles/doc-architecture#identity-manifests-imf","indices":{"identity-manifests-imf":0,"doc-architecture#identity-manifests-imf":1,"/doc/architecture.md#identity-manifests-imf":1}},"articles/doc-architecture#the-version-manifest-vmf":{"id":"the-version-manifest-vmf","title":"The Version Manifest (VMF)","properties":{"id":"the-version-manifest-vmf","scopedId":"the-version-manifest-vmf","level":3,"html":"The Version Manifest (VMF)","text":"The Version Manifest (VMF)"},"meta":{"indexDisplayName":"     The Version Manifest (VMF)","anchor":"the-version-manifest-vmf","href":"/doc-architecture.html#the-version-manifest-vmf"},"type":"DocumentEntity","parentNode":"articles/doc-architecture","uid":"articles/doc-architecture#the-version-manifest-vmf","indices":{"the-version-manifest-vmf":0,"doc-architecture#the-version-manifest-vmf":1,"/doc/architecture.md#the-version-manifest-vmf":1}},"articles/doc-architecture#release-manifests-rmf":{"id":"release-manifests-rmf","title":"Release Manifests (RMF)","properties":{"id":"release-manifests-rmf","scopedId":"release-manifests-rmf","level":3,"html":"Release Manifests (RMF)","text":"Release Manifests (RMF)"},"meta":{"indexDisplayName":"     Release Manifests (RMF)","anchor":"release-manifests-rmf","href":"/doc-architecture.html#release-manifests-rmf"},"type":"DocumentEntity","parentNode":"articles/doc-architecture","uid":"articles/doc-architecture#release-manifests-rmf","indices":{"release-manifests-rmf":0,"doc-architecture#release-manifests-rmf":1,"/doc/architecture.md#release-manifests-rmf":1}},"articles/doc-faq":{"id":"doc-faq","symbol":"#","title":"FAQ\n","summary":"The cache is a collection of files and directories used to store transient data required for deploying or rolling back a patch; newly created files, .patch patch files, and files to be deleted are all stored inside the cache. The cache is also used when attempting to repair a corrupt version.","filePath":"doc/FAQ.md","properties":{"filePath":"doc/FAQ.md","source":"\n    <h1 class=\"anchorable-heading\">\n      <a name=\"faq\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#faq\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">FAQ</span>\n    </h1>\n  \n    <h2 class=\"anchorable-heading\">\n      <a name=\"what-is-the-cache-where-is-it-and-why-is-it-used\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#what-is-the-cache-where-is-it-and-why-is-it-used\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">What is the cache, where is it, and why is it used?</span>\n    </h2>\n  <p>The cache is a collection of files and directories used to store transient data required for deploying or rolling back a patch; newly created files, <code>.patch</code> patch files, and files to be <em>deleted</em> are all stored inside the cache. The cache is also used when attempting to repair a corrupt version.</p>\n<p>The cache can be found inside the <code>.kzh/cache</code> folder in the application&#39;s root directory.</p>\n<p>Note that the cache is emptied (or <em>purged</em>) once Karazeh is done deploying a patch (regardless of the state), so users won&#39;t have to worry about wasted space becaue there won&#39;t be any.</p>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"can-users-mess-with-the-cache-is-it-harmful\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#can-users-mess-with-the-cache-is-it-harmful\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Can users mess with the cache? Is it harmful?</span>\n    </h2>\n  <p>Nothing stops them from deleting the cache or tampering with files inside of it as it is a visible and writable folder. Usually it is harmless unless Karazeh gets abnormally terminated and it needs to perform a rollback from a corrupt version.</p>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"what-happens-if-the-patcher-was-interrupted-killed-or-somehow-terminated-while-doing-its-work\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#what-happens-if-the-patcher-was-interrupted-killed-or-somehow-terminated-while-doing-its-work\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">What happens if the patcher was interrupted, killed, or somehow terminated while doing its work?</span>\n    </h2>\n  <p>When Karazeh starts its patching routines, it probes the cache, and if the cache turns out not to be empty, that indicates that Karazeh was interrupted abnormally the last time it was run.</p>\n<p>Once it is determined that a patch was being applied, Karazeh attempts to identify its <em>last known version</em> which is <strong>stored in the cache</strong>^[1] right before any patch is applied (and removed once the patch is successfully deployed, or rolled-back).</p>\n<p>Now that the original version is identified, Karazeh will fetch the version manifest, and download the release version for the one that comes right after the original one (which is the patch that had been interrupted). Using that manifest, it resumes the procedure as it normally does: it will first roll-back all the changes, then stage, deploy, and purge.</p>\n<blockquote>\n<p>[1] The reason the patcher does not in this case identify the version using the version manifest as it normally does is because the <em>identity files</em> might have been changed during the last patch, and then checksum-ming those files would result in an identity that corresponds to no valid release!</p>\n</blockquote>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"what-happens-if-a-patch-file-could-not-be-downloaded\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#what-happens-if-a-patch-file-could-not-be-downloaded\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">What happens if a patch file could not be downloaded?</span>\n    </h2>\n  <p>If the file&#39;s integrity was mismatched (the expected checksum or filesize of the original file didn&#39;t match the downloaded one) then the download is retried up to a configurable number of times. If it still fails, or none of the patch servers could be contacted, the patcher performs a roll-back.</p>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"what-happens-if-something-goes-wrong-while-patching\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#what-happens-if-something-goes-wrong-while-patching\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">What happens if something goes wrong while patching?</span>\n    </h2>\n  <p>For every operation that&#39;s &quot;comitted&quot; in a single Karazeh patch there&#39;s a rollback procedure that undoes it. This design allows for a robust and determinate behavior.</p>\n<p>For example, if a <code>delete</code> operation was committed at some point while patching (and its target file or directory was effectively deleted) while a later operation fails and the patch needs to be rolled back, the deleted target will be properly restored.</p>\n","id":"doc-faq","sortingId":"doc/FAQ.md","title":"FAQ","wordCount":501,"summary":"The cache is a collection of files and directories used to store transient data required for deploying or rolling back a patch; newly created files, .patch patch files, and files to be deleted are all stored inside the cache. The cache is also used when attempting to repair a corrupt version.","plainTitle":"FAQ\n","fileName":"FAQ","folder":"doc","sections":[{"id":"faq","scopedId":"faq","level":1,"html":"FAQ","text":"FAQ"},{"id":"what-is-the-cache-where-is-it-and-why-is-it-used","scopedId":"what-is-the-cache-where-is-it-and-why-is-it-used","level":2,"html":"What is the cache, where is it, and why is it used?","text":"What is the cache, where is it, and why is it used?"},{"id":"can-users-mess-with-the-cache-is-it-harmful","scopedId":"can-users-mess-with-the-cache-is-it-harmful","level":2,"html":"Can users mess with the cache? Is it harmful?","text":"Can users mess with the cache? Is it harmful?"},{"id":"what-happens-if-the-patcher-was-interrupted-killed-or-somehow-terminated-while-doing-its-work","scopedId":"what-happens-if-the-patcher-was-interrupted-killed-or-somehow-terminated-while-doing-its-work","level":2,"html":"What happens if the patcher was interrupted, killed, or somehow terminated while doing its work?","text":"What happens if the patcher was interrupted, killed, or somehow terminated while doing its work?"},{"id":"what-happens-if-a-patch-file-could-not-be-downloaded","scopedId":"what-happens-if-a-patch-file-could-not-be-downloaded","level":2,"html":"What happens if a patch file could not be downloaded?","text":"What happens if a patch file could not be downloaded?"},{"id":"what-happens-if-something-goes-wrong-while-patching","scopedId":"what-happens-if-something-goes-wrong-while-patching","level":2,"html":"What happens if something goes wrong while patching?","text":"What happens if something goes wrong while patching?"}]},"entities":["articles/doc-faq#faq","articles/doc-faq#what-is-the-cache-where-is-it-and-why-is-it-used","articles/doc-faq#can-users-mess-with-the-cache-is-it-harmful","articles/doc-faq#what-happens-if-the-patcher-was-interrupted-killed-or-somehow-terminated-while-doing-its-work","articles/doc-faq#what-happens-if-a-patch-file-could-not-be-downloaded","articles/doc-faq#what-happens-if-something-goes-wrong-while-patching"],"type":"Document","parentNode":"articles","meta":{"href":"/doc-faq.html","anchor":"articles-doc-faq"},"uid":"articles/doc-faq","indices":{"doc-faq":1,"/doc/FAQ.md":1}},"articles/doc-faq#faq":{"id":"faq","title":"FAQ","properties":{"id":"faq","scopedId":"faq","level":1,"html":"FAQ","text":"FAQ"},"meta":{"indexDisplayName":" FAQ","anchor":"faq","href":"/doc-faq.html#faq"},"type":"DocumentEntity","parentNode":"articles/doc-faq","uid":"articles/doc-faq#faq","indices":{"faq":0,"doc-faq#faq":1,"/doc/FAQ.md#faq":1}},"articles/doc-faq#what-is-the-cache-where-is-it-and-why-is-it-used":{"id":"what-is-the-cache-where-is-it-and-why-is-it-used","title":"What is the cache, where is it, and why is it used?","properties":{"id":"what-is-the-cache-where-is-it-and-why-is-it-used","scopedId":"what-is-the-cache-where-is-it-and-why-is-it-used","level":2,"html":"What is the cache, where is it, and why is it used?","text":"What is the cache, where is it, and why is it used?"},"meta":{"indexDisplayName":"   What is the cache, where is it, and why is it used?","anchor":"what-is-the-cache-where-is-it-and-why-is-it-used","href":"/doc-faq.html#what-is-the-cache-where-is-it-and-why-is-it-used"},"type":"DocumentEntity","parentNode":"articles/doc-faq","uid":"articles/doc-faq#what-is-the-cache-where-is-it-and-why-is-it-used","indices":{"what-is-the-cache-where-is-it-and-why-is-it-used":0,"doc-faq#what-is-the-cache-where-is-it-and-why-is-it-used":1,"/doc/FAQ.md#what-is-the-cache-where-is-it-and-why-is-it-used":1}},"articles/doc-faq#can-users-mess-with-the-cache-is-it-harmful":{"id":"can-users-mess-with-the-cache-is-it-harmful","title":"Can users mess with the cache? Is it harmful?","properties":{"id":"can-users-mess-with-the-cache-is-it-harmful","scopedId":"can-users-mess-with-the-cache-is-it-harmful","level":2,"html":"Can users mess with the cache? Is it harmful?","text":"Can users mess with the cache? Is it harmful?"},"meta":{"indexDisplayName":"   Can users mess with the cache? Is it harmful?","anchor":"can-users-mess-with-the-cache-is-it-harmful","href":"/doc-faq.html#can-users-mess-with-the-cache-is-it-harmful"},"type":"DocumentEntity","parentNode":"articles/doc-faq","uid":"articles/doc-faq#can-users-mess-with-the-cache-is-it-harmful","indices":{"can-users-mess-with-the-cache-is-it-harmful":0,"doc-faq#can-users-mess-with-the-cache-is-it-harmful":1,"/doc/FAQ.md#can-users-mess-with-the-cache-is-it-harmful":1}},"articles/doc-faq#what-happens-if-the-patcher-was-interrupted-killed-or-somehow-terminated-while-doing-its-work":{"id":"what-happens-if-the-patcher-was-interrupted-killed-or-somehow-terminated-while-doing-its-work","title":"What happens if the patcher was interrupted, killed, or somehow terminated while doing its work?","properties":{"id":"what-happens-if-the-patcher-was-interrupted-killed-or-somehow-terminated-while-doing-its-work","scopedId":"what-happens-if-the-patcher-was-interrupted-killed-or-somehow-terminated-while-doing-its-work","level":2,"html":"What happens if the patcher was interrupted, killed, or somehow terminated while doing its work?","text":"What happens if the patcher was interrupted, killed, or somehow terminated while doing its work?"},"meta":{"indexDisplayName":"   What happens if the patcher was interrupted, killed, or somehow terminated while doing its work?","anchor":"what-happens-if-the-patcher-was-interrupted-killed-or-somehow-terminated-while-doing-its-work","href":"/doc-faq.html#what-happens-if-the-patcher-was-interrupted-killed-or-somehow-terminated-while-doing-its-work"},"type":"DocumentEntity","parentNode":"articles/doc-faq","uid":"articles/doc-faq#what-happens-if-the-patcher-was-interrupted-killed-or-somehow-terminated-while-doing-its-work","indices":{"what-happens-if-the-patcher-was-interrupted-killed-or-somehow-terminated-while-doing-its-work":0,"doc-faq#what-happens-if-the-patcher-was-interrupted-killed-or-somehow-terminated-while-doing-its-work":1,"/doc/FAQ.md#what-happens-if-the-patcher-was-interrupted-killed-or-somehow-terminated-while-doing-its-work":1}},"articles/doc-faq#what-happens-if-a-patch-file-could-not-be-downloaded":{"id":"what-happens-if-a-patch-file-could-not-be-downloaded","title":"What happens if a patch file could not be downloaded?","properties":{"id":"what-happens-if-a-patch-file-could-not-be-downloaded","scopedId":"what-happens-if-a-patch-file-could-not-be-downloaded","level":2,"html":"What happens if a patch file could not be downloaded?","text":"What happens if a patch file could not be downloaded?"},"meta":{"indexDisplayName":"   What happens if a patch file could not be downloaded?","anchor":"what-happens-if-a-patch-file-could-not-be-downloaded","href":"/doc-faq.html#what-happens-if-a-patch-file-could-not-be-downloaded"},"type":"DocumentEntity","parentNode":"articles/doc-faq","uid":"articles/doc-faq#what-happens-if-a-patch-file-could-not-be-downloaded","indices":{"what-happens-if-a-patch-file-could-not-be-downloaded":0,"doc-faq#what-happens-if-a-patch-file-could-not-be-downloaded":1,"/doc/FAQ.md#what-happens-if-a-patch-file-could-not-be-downloaded":1}},"articles/doc-faq#what-happens-if-something-goes-wrong-while-patching":{"id":"what-happens-if-something-goes-wrong-while-patching","title":"What happens if something goes wrong while patching?","properties":{"id":"what-happens-if-something-goes-wrong-while-patching","scopedId":"what-happens-if-something-goes-wrong-while-patching","level":2,"html":"What happens if something goes wrong while patching?","text":"What happens if something goes wrong while patching?"},"meta":{"indexDisplayName":"   What happens if something goes wrong while patching?","anchor":"what-happens-if-something-goes-wrong-while-patching","href":"/doc-faq.html#what-happens-if-something-goes-wrong-while-patching"},"type":"DocumentEntity","parentNode":"articles/doc-faq","uid":"articles/doc-faq#what-happens-if-something-goes-wrong-while-patching","indices":{"what-happens-if-something-goes-wrong-while-patching":0,"doc-faq#what-happens-if-something-goes-wrong-while-patching":1,"/doc/FAQ.md#what-happens-if-something-goes-wrong-while-patching":1}},"articles/doc-internals":{"id":"doc-internals","symbol":"#","title":"Internals\n","summary":"Embedded Dependencies","filePath":"doc/internals.md","properties":{"filePath":"doc/internals.md","source":"\n    <h1 class=\"anchorable-heading\">\n      <a name=\"internals\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#internals\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Internals</span>\n    </h1>\n  \n    <h2 class=\"anchorable-heading\">\n      <a name=\"current-dependencies\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#current-dependencies\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Current dependencies</span>\n    </h2>\n  <ul>\n<li><a href=\"http://boost.org\" target=\"_blank\">boost 1.46+</a> for the <code>filesystem</code> library</li>\n<li><a href=\"http://curl.haxx.se\" target=\"_blank\">cURL</a></li>\n<li><a href=\"http://cmake.org\" target=\"_blank\">CMake 2.8+</a> for building</li>\n</ul>\n<p><strong>Embedded Dependencies</strong></p>\n<ul>\n<li><a href=\"http://librsync.sourceforge.net\" target=\"_blank\">librsync</a></li>\n<li><a href=\"http://www.grinninglizard.com/tinyxml2/index.html\" target=\"_blank\">tinyxml2</a></li>\n<li><a href=\"http://pawnscript.googlecode.com/svn-history/r6/trunk/linux/binreloc.c\" target=\"_blank\">binreloc</a> <em>Linux only</em></li>\n<li>md5</li>\n</ul>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"identifying-the-application-version\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#identifying-the-application-version\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Identifying the application version</span>\n    </h2>\n  <p>Karazeh tells which version of the application the user is currently running by way of calculating checksums of a number of files referred to as the <strong>identity files</strong>. Those checksums are joined together and the resulting &quot;blob&quot; is finally digested into another checksum known as the <strong>identity checksum</strong>. The identity checksum is, to Karazeh, the version of the running application.</p>\n<p>Identity files could be a singular binary file (the application&#39;s executable, for example), or a list of files; maybe the executable joined with the core data archive, or a crtiical script component. The usage of identity files guarantees that should any of them be tampered with, the identity checksum will no longer match the expected one resulting in an unidentified version, or a <em>corrupt</em> one.</p>\n<p>Finally, each release can define its own list of identity files. For example, a game might use its binary as the identity file until its expansion comes out where another binary is introduced, so the expansion releases can define both binaries to be the identity files.</p>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"versioning-schemes\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#versioning-schemes\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Versioning schemes</span>\n    </h2>\n  <p>Thanks to using identity files for identifying the version of the application, Karazeh does not force you to any particular versioning scheme. In fact, a &quot;version&quot;, or <em>tag</em> as it is referred to internally, is really nothing but a string to it that has no meaning. The tag can be used by you, the application developer, to label your versions in a way <strong>you</strong> see fit. The tag is also what&#39;s commonly displayed to the user, since it&#39;s much more friendly than a hex digest (the identity checksum).</p>\n<p>Examples of some popular versioning schemes: <code>1.0.3-rc1</code>, <code>10.6</code>, <code>b01cd.0</code>, <code>10.7 Lion</code>, etc.</p>\n<p>Notice how you can also use &quot;codenames&quot; as well as numbered schemes; define the tag you way you want, and parse it the way you want, Karazeh will not interfere.</p>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"generating-binary-diffs\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#generating-binary-diffs\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Generating binary diffs</span>\n    </h2>\n  <p>Binary files and data archives are usually very large, and it&#39;s inefficient to force the user to re-download them everytime they&#39;re updated. Karazeh can help you transmit only the parts that change - to an extent - in those binary files via a <a href=\"http://en.wikipedia.org/wiki/Delta_encoding\" target=\"_blank\">delta encoding</a> solution, <a href=\"librsync.sourceforge.net\" target=\"_blank\"><code>librsync</code></a>.</p>\n\n    <h3 class=\"anchorable-heading\">\n      <a name=\"the-hunt-for-a-delta-encoding-solution\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#the-hunt-for-a-delta-encoding-solution\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">The hunt for a delta encoding solution</span>\n    </h3>\n  <p>The difficulty lied in the number of requirements the library had to meet for it to be usable in Karazeh:</p>\n<ol>\n<li>memory efficiency in both encoding and decoding routines</li>\n<li>licensing compatibility (not proprietary, nor GPL)</li>\n<li>support for processing large enough basis files that can acommodate today&#39;s binary file requirements (some games have data archives as large as 20GBytes)</li>\n<li>delta filesize efficiency</li>\n<li>cross-platform operabiliity</li>\n</ol>\n<p>So in my hunt for a solution, I came accross the following:</p>\n<ol>\n<li><a href=\"http://www.daemonology.net/bsdiff/\" target=\"_blank\"><code>bsdiff</code></a> - unforgivably fast and efficient, but just as much memory-hungry; it didn&#39;t satisfy requirement#1</li>\n<li><a href=\"http://xdelta.org\" target=\"_blank\"><code>xdelta3</code></a> - the most memory efficient solution I&#39;ve tried, and the fastest, with a bit higher patch file sizes but that&#39;s a trivial price to its speed - but it&#39;s GPL licensed</li>\n<li><a href=\"http://code.google.com/p/open-vcdiff/\" target=\"_blank\"><code>open-vcdiff</code></a> - maybe I didn&#39;t know how to use it, but it ate all my memory while patching a 1GByte archive just like <code>bsdiff</code> did</li>\n</ol>\n<p>Finally, I met <code>rdiff</code>/<code>librsync</code> and it won on all grounds; license compatibility, memory requirements, speed, and patch filesize.</p>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"operations\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#operations\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Operations</span>\n    </h2>\n  <p>The following breakdown satisfies the operation requirements: Creation, Renaming, Updating, and Deletion of files (or directories, when applicable.)</p>\n\n    <h3 class=\"anchorable-heading\">\n      <a name=\"create\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#create\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\"><code>create</code></span>\n    </h3>\n  <p>Arguments:</p>\n<ol>\n<li>the source file: this is the file that will be fetched from the server and &quot;copied&quot; to a final destination</li>\n<li>the destination: the fully qualified path the file should be placed at when the patch is committed</li>\n</ol>\n<p><strong>Staging</strong></p>\n<ol>\n<li>verify that no file exists at the destination</li>\n<li>verify that the running user has write permissions</li>\n<li>verify that there&#39;s enough space to hold the file</li>\n<li>fetch the file and store it in the staging reposistory</li>\n<li>validate the file&#39;s integrity, and redownload if necessary</li>\n</ol>\n<p><strong>Deployment</strong></p>\n<ol>\n<li>move the file from the staged source to the destination</li>\n</ol>\n<p><code>create</code> in the release manifest:</p>\n<pre class=\"language-xml\"><code><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>create</span><span class=\"token punctuation\" >></span></span>\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>source</span> <span class=\"token attr-name\" >checksum</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>1234<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >size</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>500<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token cdata\" >&lt;![CDATA[/path/to/source]]></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>source</span><span class=\"token punctuation\" >></span></span>\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>destination</span><span class=\"token punctuation\" >></span></span><span class=\"token cdata\" >&lt;![CDATA[/path/to/destination]]></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>destination</span><span class=\"token punctuation\" >></span></span>\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>create</span><span class=\"token punctuation\" >></span></span></code></pre><hr>\n\n    <h3 class=\"anchorable-heading\">\n      <a name=\"update\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#update\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\"><code>update</code></span>\n    </h3>\n  <p>Arguments:</p>\n<ol>\n<li>the source file; the file to be patched</li>\n<li>the source file&#39;s checksum</li>\n<li>the patch file</li>\n<li>the patch file&#39;s checksum</li>\n<li>the patch file&#39;s size</li>\n</ol>\n<p><strong>Staging</strong></p>\n<ol>\n<li>verify that the source exists</li>\n<li>validate the integrity of the source</li>\n<li>verify that there&#39;s enough space to hold the patch file\n<strong>and</strong> the backup of the source file</li>\n<li>fetch the patch file</li>\n<li>validate the integrity of the patch file</li>\n<li>create a backup of the source file</li>\n</ol>\n<p><strong>Deployment</strong></p>\n<ol>\n<li>apply the patch on the clone (aka backup)</li>\n<li>validate the integrity of the patched file:<ol>\n<li>if the integrity test fails, announce a rollback</li>\n</ol>\n</li>\n<li>remove the source file</li>\n<li>move the patched file to the source&#39;s destination</li>\n</ol>\n<p><code>create</code> in the release manifest:</p>\n<pre class=\"language-xml\"><code><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>update</span><span class=\"token punctuation\" >></span></span>\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>target</span> <span class=\"token attr-name\" >pre-checksum</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>1234<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >post-checksum</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>5678<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token cdata\" >&lt;![CDATA[/path/to/file]]></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>target</span><span class=\"token punctuation\" >></span></span>\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>patch</span>  <span class=\"token attr-name\" >checksum</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>5678<span class=\"token punctuation\" >\"</span></span> <span class=\"token attr-name\" >size</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>100<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token cdata\" >&lt;![CDATA[/path/to/patch]]></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>patch</span><span class=\"token punctuation\" >></span></span>\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>update</span><span class=\"token punctuation\" >></span></span></code></pre><hr>\n\n    <h3 class=\"anchorable-heading\">\n      <a name=\"rename\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#rename\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\"><code>rename</code></span>\n    </h3>\n  <p>Arguments:</p>\n<ol>\n<li>the fully qualified source path</li>\n<li>the fully qualified destination path</li>\n</ol>\n<p><strong>Staging</strong></p>\n<ol>\n<li>verify that the source exists</li>\n<li>verify that the destination is clear</li>\n</ol>\n<p><strong>Deployment</strong></p>\n<ol>\n<li>move the source to the destination</li>\n</ol>\n<p><code>rename</code> in the release manifest:</p>\n<pre class=\"language-xml\"><code><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>rename</span><span class=\"token punctuation\" >></span></span>\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>from</span> <span class=\"token attr-name\" >checksum</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>[1234]<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token cdata\" >&lt;![CDATA[/path/to/file]]></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>from</span><span class=\"token punctuation\" >></span></span>\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>to</span><span class=\"token punctuation\" >></span></span><span class=\"token cdata\" >&lt;![CDATA[/new/path/to/file]]></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>to</span><span class=\"token punctuation\" >></span></span>\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>rename</span><span class=\"token punctuation\" >></span></span></code></pre><hr>\n\n    <h3 class=\"anchorable-heading\">\n      <a name=\"delete\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#delete\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\"><code>delete</code></span>\n    </h3>\n  <p>Arguments:</p>\n<ol>\n<li>the fully qualified source path</li>\n</ol>\n<p><strong>Staging</strong></p>\n<ol>\n<li>verify that the source exists</li>\n</ol>\n<p><strong>Deployment</strong></p>\n<ol>\n<li>if the source is a directory, recursively empty its contents</li>\n<li>remove the source</li>\n</ol>\n<p><code>delete</code> in the release manifest:</p>\n<pre class=\"language-xml\"><code><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>delete</span><span class=\"token punctuation\" >></span></span>\n  <span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;</span>target</span> <span class=\"token attr-name\" >checksum</span><span class=\"token attr-value\" ><span class=\"token punctuation\" >=</span><span class=\"token punctuation\" >\"</span>[1234]<span class=\"token punctuation\" >\"</span></span><span class=\"token punctuation\" >></span></span><span class=\"token cdata\" >&lt;![CDATA[/path/to/file-or-directory]]></span><span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>target</span><span class=\"token punctuation\" >></span></span>\n<span class=\"token tag\" ><span class=\"token tag\" ><span class=\"token punctuation\" >&lt;/</span>delete</span><span class=\"token punctuation\" >></span></span></code></pre>\n    <h3 class=\"anchorable-heading\">\n      <a name=\"notes\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#notes\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Notes</span>\n    </h3>\n  <ul>\n<li><code>&lt;create executable=&quot;true&quot;&gt;</code> will cause the patcher to mark the created file as executable (chmod 0711)</li>\n<li><code>&lt;delete&gt;</code> entries will internally mark those paths as &quot;to be deleted&quot;, so any subsequent  <code>&lt;create&gt;</code> entry with one of those paths will know that they will be deleted, and will not cause a staging error; effectively, we achieve the effect of <code>&lt;replace&gt;</code> without having to implement any!</li>\n<li>running with <code>-v</code> will cause the <code>resource_manager</code> to print out the content of all downloaded files</li>\n<li><code>&lt;delete&gt;</code> recursively removes directories as well as files</li>\n</ul>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"the-version-manifest\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#the-version-manifest\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">The Version Manifest</span>\n    </h2>\n  <pre class=\"language-xml\"><code>[!include!](https://raw.github.com/amireh/karazeh_v2/master/doc/version_manifest.template.xml)</code></pre>\n    <h2 class=\"anchorable-heading\">\n      <a name=\"the-release-manifest\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#the-release-manifest\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">The Release Manifest</span>\n    </h2>\n  <pre class=\"language-xml\"><code>[!include!](https://raw.github.com/amireh/karazeh_v2/master/doc/release_manifest.template.xml)</code></pre>","id":"doc-internals","sortingId":"doc/internals.md","title":"Internals","wordCount":1046,"summary":"Embedded Dependencies","plainTitle":"Internals\n","fileName":"internals","folder":"doc","sections":[{"id":"internals","scopedId":"internals","level":1,"html":"Internals","text":"Internals"},{"id":"current-dependencies","scopedId":"current-dependencies","level":2,"html":"Current dependencies","text":"Current dependencies"},{"id":"identifying-the-application-version","scopedId":"identifying-the-application-version","level":2,"html":"Identifying the application version","text":"Identifying the application version"},{"id":"versioning-schemes","scopedId":"versioning-schemes","level":2,"html":"Versioning schemes","text":"Versioning schemes"},{"id":"generating-binary-diffs","scopedId":"generating-binary-diffs","level":2,"html":"Generating binary diffs","text":"Generating binary diffs"},{"id":"the-hunt-for-a-delta-encoding-solution","scopedId":"the-hunt-for-a-delta-encoding-solution","level":3,"html":"The hunt for a delta encoding solution","text":"The hunt for a delta encoding solution"},{"id":"operations","scopedId":"operations","level":2,"html":"Operations","text":"Operations"},{"id":"create","scopedId":"create","level":3,"html":"<code>create</code>","text":"create"},{"id":"update","scopedId":"update","level":3,"html":"<code>update</code>","text":"update"},{"id":"rename","scopedId":"rename","level":3,"html":"<code>rename</code>","text":"rename"},{"id":"delete","scopedId":"delete","level":3,"html":"<code>delete</code>","text":"delete"},{"id":"notes","scopedId":"notes","level":3,"html":"Notes","text":"Notes"},{"id":"the-version-manifest","scopedId":"the-version-manifest","level":2,"html":"The Version Manifest","text":"The Version Manifest"},{"id":"the-release-manifest","scopedId":"the-release-manifest","level":2,"html":"The Release Manifest","text":"The Release Manifest"}]},"entities":["articles/doc-internals#internals","articles/doc-internals#current-dependencies","articles/doc-internals#identifying-the-application-version","articles/doc-internals#versioning-schemes","articles/doc-internals#generating-binary-diffs","articles/doc-internals#the-hunt-for-a-delta-encoding-solution","articles/doc-internals#operations","articles/doc-internals#create","articles/doc-internals#update","articles/doc-internals#rename","articles/doc-internals#delete","articles/doc-internals#notes","articles/doc-internals#the-version-manifest","articles/doc-internals#the-release-manifest"],"type":"Document","parentNode":"articles","meta":{"href":"/doc-internals.html","anchor":"articles-doc-internals"},"uid":"articles/doc-internals","indices":{"doc-internals":1,"/doc/internals.md":1}},"articles/doc-internals#internals":{"id":"internals","title":"Internals","properties":{"id":"internals","scopedId":"internals","level":1,"html":"Internals","text":"Internals"},"meta":{"indexDisplayName":" Internals","anchor":"internals","href":"/doc-internals.html#internals"},"type":"DocumentEntity","parentNode":"articles/doc-internals","uid":"articles/doc-internals#internals","indices":{"internals":0,"doc-internals#internals":1,"/doc/internals.md#internals":1}},"articles/doc-internals#current-dependencies":{"id":"current-dependencies","title":"Current dependencies","properties":{"id":"current-dependencies","scopedId":"current-dependencies","level":2,"html":"Current dependencies","text":"Current dependencies"},"meta":{"indexDisplayName":"   Current dependencies","anchor":"current-dependencies","href":"/doc-internals.html#current-dependencies"},"type":"DocumentEntity","parentNode":"articles/doc-internals","uid":"articles/doc-internals#current-dependencies","indices":{"current-dependencies":0,"doc-internals#current-dependencies":1,"/doc/internals.md#current-dependencies":1}},"articles/doc-internals#identifying-the-application-version":{"id":"identifying-the-application-version","title":"Identifying the application version","properties":{"id":"identifying-the-application-version","scopedId":"identifying-the-application-version","level":2,"html":"Identifying the application version","text":"Identifying the application version"},"meta":{"indexDisplayName":"   Identifying the application version","anchor":"identifying-the-application-version","href":"/doc-internals.html#identifying-the-application-version"},"type":"DocumentEntity","parentNode":"articles/doc-internals","uid":"articles/doc-internals#identifying-the-application-version","indices":{"identifying-the-application-version":0,"doc-internals#identifying-the-application-version":1,"/doc/internals.md#identifying-the-application-version":1}},"articles/doc-internals#versioning-schemes":{"id":"versioning-schemes","title":"Versioning schemes","properties":{"id":"versioning-schemes","scopedId":"versioning-schemes","level":2,"html":"Versioning schemes","text":"Versioning schemes"},"meta":{"indexDisplayName":"   Versioning schemes","anchor":"versioning-schemes","href":"/doc-internals.html#versioning-schemes"},"type":"DocumentEntity","parentNode":"articles/doc-internals","uid":"articles/doc-internals#versioning-schemes","indices":{"versioning-schemes":0,"doc-internals#versioning-schemes":1,"/doc/internals.md#versioning-schemes":1}},"articles/doc-internals#generating-binary-diffs":{"id":"generating-binary-diffs","title":"Generating binary diffs","properties":{"id":"generating-binary-diffs","scopedId":"generating-binary-diffs","level":2,"html":"Generating binary diffs","text":"Generating binary diffs"},"meta":{"indexDisplayName":"   Generating binary diffs","anchor":"generating-binary-diffs","href":"/doc-internals.html#generating-binary-diffs"},"type":"DocumentEntity","parentNode":"articles/doc-internals","uid":"articles/doc-internals#generating-binary-diffs","indices":{"generating-binary-diffs":0,"doc-internals#generating-binary-diffs":1,"/doc/internals.md#generating-binary-diffs":1}},"articles/doc-internals#the-hunt-for-a-delta-encoding-solution":{"id":"the-hunt-for-a-delta-encoding-solution","title":"The hunt for a delta encoding solution","properties":{"id":"the-hunt-for-a-delta-encoding-solution","scopedId":"the-hunt-for-a-delta-encoding-solution","level":3,"html":"The hunt for a delta encoding solution","text":"The hunt for a delta encoding solution"},"meta":{"indexDisplayName":"     The hunt for a delta encoding solution","anchor":"the-hunt-for-a-delta-encoding-solution","href":"/doc-internals.html#the-hunt-for-a-delta-encoding-solution"},"type":"DocumentEntity","parentNode":"articles/doc-internals","uid":"articles/doc-internals#the-hunt-for-a-delta-encoding-solution","indices":{"the-hunt-for-a-delta-encoding-solution":0,"doc-internals#the-hunt-for-a-delta-encoding-solution":1,"/doc/internals.md#the-hunt-for-a-delta-encoding-solution":1}},"articles/doc-internals#operations":{"id":"operations","title":"Operations","properties":{"id":"operations","scopedId":"operations","level":2,"html":"Operations","text":"Operations"},"meta":{"indexDisplayName":"   Operations","anchor":"operations","href":"/doc-internals.html#operations"},"type":"DocumentEntity","parentNode":"articles/doc-internals","uid":"articles/doc-internals#operations","indices":{"operations":0,"doc-internals#operations":1,"/doc/internals.md#operations":1}},"articles/doc-internals#create":{"id":"create","title":"create","properties":{"id":"create","scopedId":"create","level":3,"html":"<code>create</code>","text":"create"},"meta":{"indexDisplayName":"     create","anchor":"create","href":"/doc-internals.html#create"},"type":"DocumentEntity","parentNode":"articles/doc-internals","uid":"articles/doc-internals#create","indices":{"create":0,"doc-internals#create":1,"/doc/internals.md#create":1}},"articles/doc-internals#update":{"id":"update","title":"update","properties":{"id":"update","scopedId":"update","level":3,"html":"<code>update</code>","text":"update"},"meta":{"indexDisplayName":"     update","anchor":"update","href":"/doc-internals.html#update"},"type":"DocumentEntity","parentNode":"articles/doc-internals","uid":"articles/doc-internals#update","indices":{"update":0,"doc-internals#update":1,"/doc/internals.md#update":1}},"articles/doc-internals#rename":{"id":"rename","title":"rename","properties":{"id":"rename","scopedId":"rename","level":3,"html":"<code>rename</code>","text":"rename"},"meta":{"indexDisplayName":"     rename","anchor":"rename","href":"/doc-internals.html#rename"},"type":"DocumentEntity","parentNode":"articles/doc-internals","uid":"articles/doc-internals#rename","indices":{"rename":0,"doc-internals#rename":1,"/doc/internals.md#rename":1}},"articles/doc-internals#delete":{"id":"delete","title":"delete","properties":{"id":"delete","scopedId":"delete","level":3,"html":"<code>delete</code>","text":"delete"},"meta":{"indexDisplayName":"     delete","anchor":"delete","href":"/doc-internals.html#delete"},"type":"DocumentEntity","parentNode":"articles/doc-internals","uid":"articles/doc-internals#delete","indices":{"delete":0,"doc-internals#delete":1,"/doc/internals.md#delete":1}},"articles/doc-internals#notes":{"id":"notes","title":"Notes","properties":{"id":"notes","scopedId":"notes","level":3,"html":"Notes","text":"Notes"},"meta":{"indexDisplayName":"     Notes","anchor":"notes","href":"/doc-internals.html#notes"},"type":"DocumentEntity","parentNode":"articles/doc-internals","uid":"articles/doc-internals#notes","indices":{"notes":0,"doc-internals#notes":1,"/doc/internals.md#notes":1}},"articles/doc-internals#the-version-manifest":{"id":"the-version-manifest","title":"The Version Manifest","properties":{"id":"the-version-manifest","scopedId":"the-version-manifest","level":2,"html":"The Version Manifest","text":"The Version Manifest"},"meta":{"indexDisplayName":"   The Version Manifest","anchor":"the-version-manifest","href":"/doc-internals.html#the-version-manifest"},"type":"DocumentEntity","parentNode":"articles/doc-internals","uid":"articles/doc-internals#the-version-manifest","indices":{"the-version-manifest":0,"doc-internals#the-version-manifest":1,"/doc/internals.md#the-version-manifest":1}},"articles/doc-internals#the-release-manifest":{"id":"the-release-manifest","title":"The Release Manifest","properties":{"id":"the-release-manifest","scopedId":"the-release-manifest","level":2,"html":"The Release Manifest","text":"The Release Manifest"},"meta":{"indexDisplayName":"   The Release Manifest","anchor":"the-release-manifest","href":"/doc-internals.html#the-release-manifest"},"type":"DocumentEntity","parentNode":"articles/doc-internals","uid":"articles/doc-internals#the-release-manifest","indices":{"the-release-manifest":0,"doc-internals#the-release-manifest":1,"/doc/internals.md#the-release-manifest":1}},"articles/doc-overview":{"id":"doc-overview","symbol":"#","title":"Overview\n","summary":"The main reason I decided to rebuild Karazeh from the grounds up is to redesign the main patching process in order to obtain a reasonable amount of robustness. I don't want it to be responsible for corrupting an application repository, and so I've decided to break down the process of applying a patch into four phases: two of them are sequential, and two are conditional.","filePath":"doc/overview.md","properties":{"filePath":"doc/overview.md","source":"\n    <h1 class=\"anchorable-heading\">\n      <a name=\"overview\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#overview\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Overview</span>\n    </h1>\n  <p>The main reason I decided to rebuild Karazeh from the grounds up is to redesign the main patching process in order to obtain a reasonable amount of <strong>robustness</strong>. I don&#39;t want it to be responsible for <em>corrupting</em> an application repository, and so I&#39;ve decided to break down the process of applying a patch into four phases: two of them are sequential, and two are conditional.</p>\n<p>Each operation has its own routine for each phase.</p>\n<iframe\n  id=\"xmindshare_embedviewer\"\n  src=\"http://www.xmind.net/embed/FFcq?size=large\"\n  width=\"100%\"\n  height=\"540px\"\n  frameborder=\"0\"\n  scrolling=\"no\"\n></iframe>\n\n<p>The map lists every action and test done by each operation during each phase of applying a patch. The stages are explained in the following sections.</p>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"phase-1-staging\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#phase-1-staging\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Phase 1 - Staging</span>\n    </h2>\n  <p>The first stage of applying a patch is aptly named <em>staging</em> and it is a stage of aggressive checks and verifications that tries to ensure that nothing will go wrong when Karazeh will start modifying things.</p>\n<p>Operations that require downloading remote resources, such as <code>create</code> and <code>update</code>, do so during the staging process. The downloaded files are kept in the cache. They will also validate the integrity of the downloaded files.</p>\n<p>The diagram above explains in detail what each operation does in each stage; the checks and actions it takes.</p>\n<p><strong>During staging and deployment, any operation that fails for any reason will cause the patcher to invoke a rollback, effectively restoring the application to its earlier state.</strong></p>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"phase-2-deployment\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#phase-2-deployment\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Phase 2 - Deployment</span>\n    </h2>\n  <p>Alright, so now we have our patch files ready, and we&#39;ve done the required testing. Well, something might have changed since the operations were staged, so <strong>some</strong> of the tests are re-run before deployment.</p>\n<p>Deployment is where application files are actually modified. <code>create</code> operation now actually creates the new resource at its specified destination, the <code>update</code> operation performs the patching on the target file, <code>delete</code> removes the file (almost true), etc.</p>\n<p>As noted in the Staging section, any failure here will also cause a rollback. But the question is, how can we rollback if we&#39;ve modified files or removed them? Even in the deployment stage (and the staging one), no operation modifies an application file in any way without either:</p>\n<ol>\n<li>making a backup</li>\n<li>making sure there&#39;s a way to revert the file to its original state</li>\n</ol>\n<p>So in the case of <code>delete</code>, all it truly does in the deployment stage is <em>move</em> the file from its original location into the <em>cache</em>. So if a rollback is invoked, it&#39;s simply a matter of moving the file back from the cache to its original location.</p>\n<p>If everything went okay with staging and deployment, the committing stage is entered.</p>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"rolling-back\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#rolling-back\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Rolling Back</span>\n    </h2>\n  <p>The only thing worth noting here is that any failure reached while rolling back the changes will most definitely cause a <strong>version corruption</strong>. So far, I haven&#39;t thought out a solution to <em>repair</em> corrupt versions so I have little to say here.</p>\n<p>Rollback routines are meant to undo any changes made while staging and deploying.</p>\n\n    <h2 class=\"anchorable-heading\">\n      <a name=\"committing\" class=\"anchorable-heading__anchor\"></a>\n      <a href=\"#committing\" class=\"anchorable-heading__link icon icon-link\"></a><span class=\"anchorable-heading__text\">Committing</span>\n    </h2>\n  <p>If everything went OK and no rollback was invoked, all operations are called to &quot;commit&quot; their changes; a commit means that the patch was applied successfully, and any <em>transient</em> data maintained for rolling-back can be safely discarded.</p>\n<p>In the case of <code>delete</code>, this means it will remove the file from the cache. <code>update</code> will delete the patch file and the backup, etc. The cache should be effectively purged after this stage, and there will be nothing more to do!</p>\n","id":"doc-overview","sortingId":"doc/overview.md","title":"Overview","wordCount":575,"summary":"The main reason I decided to rebuild Karazeh from the grounds up is to redesign the main patching process in order to obtain a reasonable amount of robustness. I don't want it to be responsible for corrupting an application repository, and so I've decided to break down the process of applying a patch into four phases: two of them are sequential, and two are conditional.","plainTitle":"Overview\n","fileName":"overview","folder":"doc","sections":[{"id":"overview","scopedId":"overview","level":1,"html":"Overview","text":"Overview"},{"id":"phase-1-staging","scopedId":"phase-1-staging","level":2,"html":"Phase 1 - Staging","text":"Phase 1 - Staging"},{"id":"phase-2-deployment","scopedId":"phase-2-deployment","level":2,"html":"Phase 2 - Deployment","text":"Phase 2 - Deployment"},{"id":"rolling-back","scopedId":"rolling-back","level":2,"html":"Rolling Back","text":"Rolling Back"},{"id":"committing","scopedId":"committing","level":2,"html":"Committing","text":"Committing"}]},"entities":["articles/doc-overview#overview","articles/doc-overview#phase-1-staging","articles/doc-overview#phase-2-deployment","articles/doc-overview#rolling-back","articles/doc-overview#committing"],"type":"Document","parentNode":"articles","meta":{"href":"/doc-overview.html","anchor":"articles-doc-overview"},"uid":"articles/doc-overview","indices":{"doc-overview":1,"/doc/overview.md":1}},"articles/doc-overview#overview":{"id":"overview","title":"Overview","properties":{"id":"overview","scopedId":"overview","level":1,"html":"Overview","text":"Overview"},"meta":{"indexDisplayName":" Overview","anchor":"overview","href":"/doc-overview.html#overview"},"type":"DocumentEntity","parentNode":"articles/doc-overview","uid":"articles/doc-overview#overview","indices":{"overview":0,"doc-overview#overview":1,"/doc/overview.md#overview":1}},"articles/doc-overview#phase-1-staging":{"id":"phase-1-staging","title":"Phase 1 - Staging","properties":{"id":"phase-1-staging","scopedId":"phase-1-staging","level":2,"html":"Phase 1 - Staging","text":"Phase 1 - Staging"},"meta":{"indexDisplayName":"   Phase 1 - Staging","anchor":"phase-1-staging","href":"/doc-overview.html#phase-1-staging"},"type":"DocumentEntity","parentNode":"articles/doc-overview","uid":"articles/doc-overview#phase-1-staging","indices":{"phase-1-staging":0,"doc-overview#phase-1-staging":1,"/doc/overview.md#phase-1-staging":1}},"articles/doc-overview#phase-2-deployment":{"id":"phase-2-deployment","title":"Phase 2 - Deployment","properties":{"id":"phase-2-deployment","scopedId":"phase-2-deployment","level":2,"html":"Phase 2 - Deployment","text":"Phase 2 - Deployment"},"meta":{"indexDisplayName":"   Phase 2 - Deployment","anchor":"phase-2-deployment","href":"/doc-overview.html#phase-2-deployment"},"type":"DocumentEntity","parentNode":"articles/doc-overview","uid":"articles/doc-overview#phase-2-deployment","indices":{"phase-2-deployment":0,"doc-overview#phase-2-deployment":1,"/doc/overview.md#phase-2-deployment":1}},"articles/doc-overview#rolling-back":{"id":"rolling-back","title":"Rolling Back","properties":{"id":"rolling-back","scopedId":"rolling-back","level":2,"html":"Rolling Back","text":"Rolling Back"},"meta":{"indexDisplayName":"   Rolling Back","anchor":"rolling-back","href":"/doc-overview.html#rolling-back"},"type":"DocumentEntity","parentNode":"articles/doc-overview","uid":"articles/doc-overview#rolling-back","indices":{"rolling-back":0,"doc-overview#rolling-back":1,"/doc/overview.md#rolling-back":1}},"articles/doc-overview#committing":{"id":"committing","title":"Committing","properties":{"id":"committing","scopedId":"committing","level":2,"html":"Committing","text":"Committing"},"meta":{"indexDisplayName":"   Committing","anchor":"committing","href":"/doc-overview.html#committing"},"type":"DocumentEntity","parentNode":"articles/doc-overview","uid":"articles/doc-overview#committing","indices":{"committing":0,"doc-overview#committing":1,"/doc/overview.md#committing":1}},"ui":{"id":"ui","name":"ui","meta":{"anchor":"ui"},"documents":["ui/index","ui/404"],"type":"Namespace","symbol":"/","uid":"ui","indices":{}},"ui/index":{"id":"index","title":"Karazeh","summary":"","meta":{"href":"/index.html","anchor":"ui-index"},"type":"Document","parentNode":"ui","symbol":"/","uid":"ui/index","indices":{"index":1}},"ui/404":{"id":"404","title":"404 - Not Found","summary":"Not Found","meta":{"href":"/404.html","anchor":"ui-404"},"type":"Document","parentNode":"ui","symbol":"/","uid":"ui/404","indices":{"404":1}}}};